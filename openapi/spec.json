{
  "openapi": "3.0.0",
  "paths": {
    "/projects": {
      "post": {
        "description": "Create a new project with the specified name, description, and type",
        "operationId": "ProjectsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProjectResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Validation failed"
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unprocessable Entity"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to create project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to create project"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Create a new project",
        "tags": [
          "projects"
        ]
      },
      "get": {
        "description": "Get all projects for the organization with pagination",
        "operationId": "ProjectsController_list",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (default: 1)",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Number of items per page (default: 10)",
            "schema": {
              "example": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Projects retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListProjectsResponseDto"
                }
              }
            }
          },
          "422": {
            "description": "Organization not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "Organization not found"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unprocessable Entity"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to list projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to list projects"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "List all projects",
        "tags": [
          "projects"
        ]
      }
    },
    "/projects/{id}": {
      "get": {
        "description": "Retrieve a project by its unique identifier including its datasets",
        "operationId": "ProjectsController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the project",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProjectResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Project not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Project not found"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to fetch project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to fetch project"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get project by ID",
        "tags": [
          "projects"
        ]
      }
    },
    "/projects/{projectId}/datasets/{datasetId}/upload": {
      "post": {
        "description": "Generate a signed URL for uploading a file to the project dataset",
        "operationId": "ProjectsController_uploadFile",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "description": "The ID of the project",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          },
          {
            "name": "datasetId",
            "required": true,
            "in": "path",
            "description": "The ID of the dataset",
            "schema": {
              "example": "456e7890-e89b-12d3-a456-426614174001",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UploadFileDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Upload URL generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadFileResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Validation failed"
                    },
                    "error": {
                      "type": "string",
                      "example": "Bad Request"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Dataset not found or does not belong to the specified project",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 422
                    },
                    "message": {
                      "type": "string",
                      "example": "Dataset not found or does not belong to the specified project"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unprocessable Entity"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to generate upload URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to generate upload URL"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Upload file to project dataset",
        "tags": [
          "projects"
        ]
      }
    },
    "/datasets/{id}": {
      "get": {
        "description": "Retrieve a dataset by its unique identifier without fetching records",
        "operationId": "DatasetsController_getById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the dataset",
            "schema": {
              "example": "123e4567-e89b-12d3-a456-426614174000",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dataset retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDatasetResponseDto"
                }
              }
            }
          },
          "404": {
            "description": "Dataset not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Dataset not found"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to fetch dataset",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "number",
                      "example": 500
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to fetch dataset"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get dataset by ID",
        "tags": [
          "datasets"
        ]
      }
    }
  },
  "info": {
    "title": "SUPAEVAL API",
    "description": "",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateProjectDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the project",
            "example": "E-commerce Platform"
          },
          "description": {
            "type": "string",
            "description": "The description of the project",
            "example": "A modern e-commerce platform with advanced features and analytics"
          },
          "type": {
            "type": "string",
            "enum": [
              "MULTIMODAL",
              "IMAGE_EXTRACTION",
              "LLM_TEXT",
              "INSTANCE_SEGMENTATION"
            ],
            "description": "The type of the project",
            "example": "IMAGE_EXTRACTION"
          }
        },
        "required": [
          "name",
          "description",
          "type"
        ]
      },
      "DatasetEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "version": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "projectId",
          "version",
          "createdAt",
          "updatedAt"
        ]
      },
      "CreateProjectResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the project",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "The name of the project",
            "example": "E-commerce Platform"
          },
          "description": {
            "type": "string",
            "description": "The description of the project",
            "example": "A modern e-commerce platform with advanced features and analytics"
          },
          "type": {
            "type": "string",
            "enum": [
              "MULTIMODAL",
              "IMAGE_EXTRACTION",
              "LLM_TEXT",
              "INSTANCE_SEGMENTATION"
            ],
            "description": "The type of the project",
            "example": "IMAGE_EXTRACTION"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The creation timestamp",
            "example": "2024-03-14T12:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The last update timestamp",
            "example": "2024-03-14T12:00:00.000Z"
          },
          "organizationId": {
            "type": "string",
            "description": "The organization ID that owns this project",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "createdById": {
            "type": "string",
            "description": "The user ID who created this project",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "datasets": {
            "description": "The datasets associated with this project",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatasetEntity"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "type",
          "createdAt",
          "updatedAt",
          "organizationId",
          "createdById"
        ]
      },
      "ProjectEntity": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the project",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "The name of the project",
            "example": "E-commerce Platform"
          },
          "description": {
            "type": "string",
            "description": "The description of the project",
            "example": "A modern e-commerce platform with advanced features and analytics"
          },
          "type": {
            "type": "string",
            "enum": [
              "MULTIMODAL",
              "IMAGE_EXTRACTION",
              "LLM_TEXT",
              "INSTANCE_SEGMENTATION"
            ],
            "description": "The type of the project",
            "example": "IMAGE_EXTRACTION"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The creation timestamp",
            "example": "2024-03-14T12:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The last update timestamp",
            "example": "2024-03-14T12:00:00.000Z"
          },
          "organizationId": {
            "type": "string",
            "description": "The organization ID that owns this project",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "createdById": {
            "type": "string",
            "description": "The user ID who created this project",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "datasets": {
            "description": "The datasets associated with this project",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatasetEntity"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "type",
          "createdAt",
          "updatedAt",
          "organizationId",
          "createdById"
        ]
      },
      "ListProjectsResponseDto": {
        "type": "object",
        "properties": {
          "items": {
            "description": "Array of projects",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProjectEntity"
            }
          },
          "count": {
            "type": "number",
            "description": "Total count of items",
            "example": 25
          },
          "page": {
            "type": "number",
            "description": "Current page number",
            "example": 1
          },
          "nextPage": {
            "type": "number",
            "nullable": true,
            "description": "Next page number, null if no next page",
            "example": 2
          }
        },
        "required": [
          "items",
          "count",
          "page",
          "nextPage"
        ]
      },
      "GetProjectResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the project",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "name": {
            "type": "string",
            "description": "The name of the project",
            "example": "My Awesome Project"
          },
          "description": {
            "type": "string",
            "description": "The description of the project",
            "example": "A project for extracting data from images"
          },
          "type": {
            "type": "string",
            "description": "The type of the project",
            "enum": [
              "MULTIMODAL",
              "IMAGE_EXTRACTION",
              "LLM_TEXT",
              "INSTANCE_SEGMENTATION"
            ],
            "example": "MULTIMODAL"
          },
          "organizationId": {
            "type": "string",
            "description": "The ID of the organization this project belongs to",
            "example": "456e7890-e89b-12d3-a456-426614174001"
          },
          "createdById": {
            "type": "string",
            "description": "The ID of the user who created this project",
            "example": "789e0123-e89b-12d3-a456-426614174002"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The creation timestamp",
            "example": "2024-03-14T12:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The last update timestamp",
            "example": "2024-03-14T12:00:00.000Z"
          },
          "datasets": {
            "description": "The datasets associated with this project",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DatasetEntity"
            }
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "type",
          "organizationId",
          "createdById",
          "createdAt",
          "updatedAt"
        ]
      },
      "UploadFileDto": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "The name of the file to upload",
            "example": "image.jpg"
          },
          "contentType": {
            "type": "string",
            "description": "The MIME type of the file",
            "example": "image/jpeg"
          }
        },
        "required": [
          "fileName",
          "contentType"
        ]
      },
      "UploadFileResponseDto": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The signed upload URL",
            "example": "https://storage.googleapis.com/bucket/projects/123/datasets/456/1234567890-image.jpg?X-Goog-Algorithm=..."
          },
          "fields": {
            "type": "object",
            "description": "Additional fields for the upload request",
            "example": {}
          },
          "expiresIn": {
            "type": "number",
            "description": "Expiration time in seconds",
            "example": 3600
          }
        },
        "required": [
          "url",
          "fields",
          "expiresIn"
        ]
      },
      "GetDatasetResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The unique identifier of the dataset",
            "example": "123e4567-e89b-12d3-a456-426614174000"
          },
          "projectId": {
            "type": "string",
            "description": "The ID of the project this dataset belongs to",
            "example": "456e7890-e89b-12d3-a456-426614174001"
          },
          "version": {
            "type": "number",
            "description": "The version number of the dataset",
            "example": 1
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "The creation timestamp",
            "example": "2024-03-14T12:00:00.000Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "The last update timestamp",
            "example": "2024-03-14T12:00:00.000Z"
          }
        },
        "required": [
          "id",
          "projectId",
          "version",
          "createdAt",
          "updatedAt"
        ]
      }
    }
  }
}